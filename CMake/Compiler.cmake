# taken from FindBoost.cmake
FUNCTION(CXX_COMPILER_DUMPVERSION OUTPUT_VERSION)
    IF(${CMAKE_CXX_COMPILER} MATCHES "^g\\+\\+")
        EXEC_PROGRAM(${CMAKE_CXX_COMPILER}
            ARGS ${CMAKE_CXX_COMPILER_ARG1} -dumpversion
            OUTPUT_VARIABLE COMPILER_VERSION
        )
        STRING(REGEX REPLACE "([0-9]\\.)([0-9])(-[0-9])?.*" "\\1\\2"
               COMPILER_VERSION ${COMPILER_VERSION})
        SET(${OUTPUT_VERSION} ${COMPILER_VERSION} PARENT_SCOPE)
    ELSEIF(${CMAKE_CXX_COMPILER} MATCHES "^clang\\+\\+")
        EXEC_PROGRAM(${CMAKE_CXX_COMPILER}
            ARGS ${CMAKE_CXX_COMPILER_ARG1} --version
            OUTPUT_VARIABLE COMPILER_VERSION
        )
        STRING(REGEX REPLACE "^.*version ([0-9]\\.)([0-9])(-[0-9])?.*" "\\1\\2"
               COMPILER_VERSION ${COMPILER_VERSION})

        SET(${OUTPUT_VERSION} ${COMPILER_VERSION} PARENT_SCOPE)
    ENDIF(${CMAKE_CXX_COMPILER} MATCHES "^g\\+\\+")
  SET(${OUTPUT_VERSION} ${COMPILER_VERSION} PARENT_SCOPE)
ENDFUNCTION(CXX_COMPILER_DUMPVERSION)

###############################################################################
###############################################################################
###############################################################################

# Set default compiler
IF(USE_CLANG)
    SET(CMAKE_C_COMPILER "clang")
    SET(CMAKE_CXX_COMPILER "clang++")
    SET(REQUIRED_COMPILER_VERSION "3.4")
ELSE(USE_CLANG)
    SET(CMAKE_C_COMPILER "gcc")
    SET(CMAKE_CXX_COMPILER "g++")
    SET(REQUIRED_COMPILER_VERSION "4.8")
ENDIF(USE_CLANG)

CXX_COMPILER_DUMPVERSION(COMPILER_VERSION)

# If compiler version is not proper try to set it explicitly
IF(NOT COMPILER_VERSION STREQUAL REQUIRED_COMPILER_VERSION)
    MESSAGE(STATUS "\"${CMAKE_CXX_COMPILER}\" version improper (is \"${COMPILER_VERSION}\" when \"${REQUIRED_COMPILER_VERSION}\" required), try set it explicitly")
    SET(CMAKE_C_COMPILER "${CMAKE_C_COMPILER}-${REQUIRED_COMPILER_VERSION}")
    SET(CMAKE_CXX_COMPILER "${CMAKE_CXX_COMPILER}-${REQUIRED_COMPILER_VERSION}")
ELSE(NOT COMPILER_VERSION STREQUAL REQUIRED_COMPILER_VERSION)
    MESSAGE(STATUS "Found \"${CMAKE_CXX_COMPILER}\" version \"${COMPILER_VERSION}\" successfully")
ENDIF(NOT COMPILER_VERSION STREQUAL REQUIRED_COMPILER_VERSION)


CXX_COMPILER_DUMPVERSION(COMPILER_VERSION)

# If not found then exit with fatal error
IF(NOT COMPILER_VERSION STREQUAL REQUIRED_COMPILER_VERSION)
    MESSAGE(FATAL_ERROR "\"${CMAKE_CXX_COMPILER}\" version improper (is \"${COMPILER_VERSION}\" when \"${REQUIRED_COMPILER_VERSION}\" required)")
ELSE(NOT COMPILER_VERSION STREQUAL REQUIRED_COMPILER_VERSION)
    MESSAGE(STATUS "Found \"${CMAKE_CXX_COMPILER}\" version \"${COMPILER_VERSION}\" successfully")
ENDIF(NOT COMPILER_VERSION STREQUAL REQUIRED_COMPILER_VERSION)

